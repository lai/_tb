// Generated by CoffeeScript 1.3.1
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

$(function() {
  var ListView, Task, collapse1, collapse1_link, collapse2, collapse2_link,
    _this = this;
  _.templateSettings = {
    interpolate: /\{\{(.+?)\}\}/g
  };
  Task = (function(_super) {

    __extends(Task, _super);

    Task.name = 'Task';

    function Task() {
      return Task.__super__.constructor.apply(this, arguments);
    }

    Task.prototype.idAttribute = "_id";

    Task.prototype.defaults = {
      name: "New Task Name"
    };

    return Task;

  })(Backbone.Model);
  ListView = (function(_super) {

    __extends(ListView, _super);

    ListView.name = 'ListView';

    function ListView() {
      return ListView.__super__.constructor.apply(this, arguments);
    }

    ListView.prototype.el = $('body');

    return ListView;

  })(Backbone.View);
  collapse1 = $("#create_task");
  collapse1_link = $("#create_task_link");
  collapse2 = $("#find_people");
  collapse2_link = $("#find_people_link");
  $(collapse1.find("input.foldup")[0]).on('click', function(event) {
    return collapse1.collapse('hide');
  });
  $(collapse2.find("input.foldup")[0]).on('click', function(event) {
    return collapse2.collapse('hide');
  });
  collapse1.on('show', function() {
    return collapse1_link.addClass("active");
  });
  collapse1.on('hide', function() {
    return collapse1_link.removeClass("active");
  });
  collapse2.on('show', function() {
    return collapse2_link.addClass("active");
  });
  return collapse2.on('hide', function() {
    return collapse2_link.removeClass("active");
  });
});
